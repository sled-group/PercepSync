<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net472;net7.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <PublishSingleFile>true</PublishSingleFile>
    <!-- Refer to https://learn.microsoft.com/en-us/dotnet/core/rid-catalog#known-rids for more RIDs -->
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
    <SelfContained>true</SelfContained>
    <Platforms>x64</Platforms>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="VideoPlayer.xml" />
    <EmbeddedResource Include="VideoPlayerStyles.css" />
  </ItemGroup>

  <!--
    NuGet does not automatically copy over necessary native binaries (.dll files), so unfortunately they need to be copied over manually.
    https://stackoverflow.com/questions/42278436/msbuild-macro-for-nuget-package-directory
  -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <Content Include="$(NuGetPackageRoot)/microsoft.cognitiveservices.speech/1.32.1/runtimes/win-x64/native/Microsoft.CognitiveServices.Speech.core.dll">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="$(NuGetPackageRoot)/microsoft.psi.media.windows.x64/0.18.72.1-beta/lib/net472/Microsoft.Psi.Media_Interop.Windows.x64.dll">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!--
    .NET does not embed Linux native libraries, e.g., .so (shard object) files, into the single executable as they are not .dll files.
    We can get around this issue by setting IncludeNativeLibrariesForSelfExtract to true so that native libraries are automatically extracted
    to a folder at start up.
    https://learn.microsoft.com/en-us/dotnet/core/deploying/single-file/overview?tabs=cli#native-libraries
  -->
  <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
  </PropertyGroup>

  <ItemGroup>
    <!-- Costura.Fody is used to create a single executable for net472 -->
    <PackageReference Include="Costura.Fody" Version="5.7.0" Condition="'$(TargetFramework)' == 'net472'">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Fody" Version="6.8.0" Condition="'$(TargetFramework)' == 'net472'">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <PackageReference Include="GtkSharp" Version="3.24.24.95" />
    <PackageReference Include="MessagePack" Version="2.5.129" />
    <PackageReference Include="Microsoft.CognitiveServices.Speech" Version="1.32.1" />
    <PackageReference Include="Microsoft.Psi.Audio" Version="0.18.72.1-beta" />
    <PackageReference Include="Microsoft.Psi.Audio.Linux" Version="0.18.72.1-beta" Condition="'$(TargetFramework)' == 'net7.0'" />
    <PackageReference Include="Microsoft.Psi.Audio.Windows" Version="0.18.72.1-beta" Condition="'$(TargetFramework)' == 'net472'" />
    <PackageReference Include="Microsoft.Psi.Interop" Version="0.18.72.1-beta" />
    <PackageReference Include="Microsoft.Psi.Media.Linux" Version="0.18.72.1-beta" Condition="'$(TargetFramework)' == 'net7.0'" />
    <PackageReference Include="Microsoft.Psi.Media.Windows.x64" Version="0.18.72.1-beta" Condition="'$(TargetFramework)' == 'net472'" />
    <PackageReference Include="Microsoft.Psi.Runtime" Version="0.18.72.1-beta" />
    <PackageReference Include="NetMQ" Version="4.0.1.13" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="Tomlyn" Version="0.16.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../HoloLensCaptureInterop/HoloLensCaptureInterop.csproj">
      <Project>{a3c3ccb5-ae71-4522-ad34-bc3e7b5ce72e}</Project>
      <Name>HoloLensCaptureInterop</Name>
    </ProjectReference>
  </ItemGroup>

</Project>
